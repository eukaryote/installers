#!/usr/bin/env bash

set -o pipefail

REPOS="${REPOS:-$HOME/repos}"
CURL_BASE="${CURL_BASE:-/opt/curl}"
NGHTTP2_BASE="${NGHTTP2_BASE:-/opt/nghttp2}"

# Run a build command with minimal environment, limited to
# LANG, LANGUAGE, and a minimal PATH containing just /usr/bin and /bin,
# and echoing the exact command to be executed before executing it.
run_clean() {
    local -r language="${LANGUAGE:-en_US}"
    local -r lang="${LANG:-${language}.UTF-8}"

    echo env -i PATH=/usr/bin:/bin LANGUAGE="${language}" LANG="${lang}" "$@"
    env -i PATH=/usr/bin:/bin LANGUAGE="${language}" LANG="${lang}" "$@"
}

install_curl_main() {
    local -r curl_version="${1:?curl_version param is required}"
    local -r nghttp2_version="${2:?nghttp2_version param is required}"

    local -r install_dir="${CURL_BASE}/${curl_version}"
    local -r nghttp2_dir="${NGHTTP2_BASE}/${nghttp2_version}"
    local -r curl_tag="curl-$(echo -n "${curl_version}" | tr '.' '_')"

    [ -d "${nghttp2_dir}" ] || {
        local rc=$?
        >&2 echo "ERROR: couldn't find nghttp2 install at expected loction: ${nghttp2_dir}"
        return $rc
    }

    cd "${REPOS}/curl" || {
        local -r rc=$?
        >&2 echo "ERROR: Git repo not found at expected location: ${REPOS}/curl"
        return $rc
    }
    git checkout "${curl_tag}" || {
        local -r rc=$?
        >&2 echo "ERROR: error checking out git version ${curl_tag}"
        return $rc
    }

    command mkdir -p "${install_dir}" || return

    run_clean ./configure --prefix="${install_dir}" --with-nghttp2="${nghttp2_dir}" --with-ssl --disable-shared || return

    local make_command=()
    local -r ccache="$(which ccache 2>/dev/null)"
    [[ -s "${ccache}" ]] && make_command+=(ccache)

    make_command+=(make)
    run_clean "${make_command[@]}" || return
    run_clean make install || return

    cd "${CURL_BASE}" || return
    [[ -e default ]] || {
        ln -sf "${curl_version}" default
    }
}

install_curl_main "$@"
