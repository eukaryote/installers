#!/usr/bin/env bash

set -o pipefail

REPOS="${REPOS:-$HOME/repos}"
NGHTTP2_BASE="${NGHTTP2_BASE:-/opt/nghttp2}"

# Source utils if running as a script (not source ourselves). This is
# at the top so that variables and functions defined in this module override
# any defined in the util script that have the same name.
if [[ "${BASH_SOURCE:-$_}" = "${0}" ]]
then
    source "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/install-util.sh" || {
        >&2 echo "ERROR: couldn't source install-util.sh script from installers directory"
        exit 1
    }
fi

get_python_version() {
    local -r full_version=$(run_clean python --version 2>&1 | tail -n 1 | grep -E -o '(\.|[[:digit:]])+' | tr -d '\s')
    echo -n "${full_version}" | command grep -E -o '[[:digit:]]+\.[[:digit:]]+'
}

install_nghttp2_main() {
    local -r version="${1:?version param is required}"
    local -r install_dir="${NGHTTP2_BASE}/${version}"

    local -r python_version=$(get_python_version) || {
        local -r rc=$?
        >&2 echo "ERROR: couldn't determine python version"
        return $rc
    }
    local -r pythonpath="${install_dir}/lib/python${python_version}/site-packages"

    cd "${REPOS}/nghttp2" || {
        local -r rc=$?
        >&2 echo "ERROR: Git repo not found at expected location: ${REPOS}/nghttp2"
        return $rc
    }
    command git checkout "v${version}" || {
        local -r rc=$?
        >&2 echo "ERROR: error checking out git version v${version}"
        return $rc
    }

    command mkdir -p "${install_dir}" || return
    command git submodule update --init || return
    run_clean autoreconf -i || return
    run_clean automake || return
    run_clean autoconf || return
    run_clean ./configure \
        PYTHONPATH="${pythonpath}" \
        --prefix="${install_dir}" || \
        return
    local make_command=()
    local -r ccache="$(which ccache 2>/dev/null)"
    [[ -s "${ccache}" ]] && make_command+=(ccache)
    make_command+=(make)
    run_clean "${make_command[@]}" || return
    mkdir -p "${pythonpath}" || return
    run_clean make PYTHONPATH="${pythonpath}" install || return
    add_default_symlink "${NGHTTP2_BASE}" "${version}"
}

# run only if not sourced, so this script can be sourced for interactive use
if [[ "${BASH_SOURCE:-$_}" = "${0}" ]]
then
    install_nghttp2_main "$@"
fi
